Microsoft (R) Macro Assembler Version 14.00.24210.0	    12/12/16 11:30:47
	BLACKJAC					     Page 1 - 1


				TITLE BLACKJACK
				; Description:BlackJack Project
				; Team: Scott Howland, Clinton Grove, Aaron ,Jacob
				; 
				; Revision date:

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data
 00000000  00000034 [		deck BYTE 52 DUP(?)
	    00
	   ]
 00000034  00000034 [		shuffled_deck BYTE 52 DUP(?)
	    00
	   ]
 00000068 34			shuffle_range_size BYTE 52
 00000069 00000000		shift_index DWORD ?
 0000006D 00			shuffled_idx BYTE 0

 0000006E  0000000A [		dealer_hand BYTE 10 DUP(?)
	    00
	   ]
 00000078 00			dealer_facedown BYTE ?
 00000079 00			dealer_idx BYTE 0

 0000007A  0000000A [		player_hand BYTE 10 DUP(?)
	    00
	   ]
 00000084 00			player_facedown BYTE ?
 00000085 00			player_idx BYTE 0

 00000086 46 61 63 65 20	face_up_string BYTE "Face Up: ",0
	   55 70 3A 20 00
 00000090 46 61 63 65 20	face_down_string BYTE "Face Down: ",0
	   44 6F 77 6E 3A
	   20 00
 0000009C 44 65 61 6C 65	dealer_faceup_string BYTE "Dealer: ",0
	   72 3A 20 00
 000000A5 31 2E 20 48 69	hit_or_stay BYTE "1. Hit or 2. Stay: ",0
	   74 20 6F 72 20
	   32 2E 20 53 74
	   61 79 3A 20 00
 000000B9 59 6F 75 20 42	bust_msg BYTE "You Busted! Press 1 to play again, 0 to exit.", 0
	   75 73 74 65 64
	   21 20 50 72 65
	   73 73 20 31 20
	   74 6F 20 70 6C
	   61 79 20 61 67
	   61 69 6E 2C 20
	   30 20 74 6F 20
	   65 78 69 74 2E
	   00
 00000000			.code

 00000000			main PROC




 00000000			GameLoop:
 00000000  C6 05 0000006D R		mov shuffled_idx, 0
	   00
 00000007  C7 05 00000069 R		mov shift_index, 0
	   00000000
 00000011  C6 05 00000068 R		mov shuffle_range_size, 52
	   34

 00000018  E8 000000C3			call deckgen
 0000001D  E8 000000E5			call shuffle
 00000022  E8 0000007C			call DealHands


 00000027			MainLoop:
 00000027  E8 00000000 E		call clrscr
 0000002C  E8 000001E0			call DisplayCards
 00000031  E8 00000235			call HitOrStay
 00000036  E8 00000000 E		call clrscr
 0000003B  E8 00000039			call CheckBust
 00000040  83 F8 00			cmp eax, 0
 00000043  74 E2			je MainLoop
 00000045  83 F8 01			cmp eax, 1
 00000048  74 00			je Bust

 0000004A			Bust:
 0000004A  E8 000001C2			call DisplayCards
 0000004F  E8 00000000 E		call crlf

 00000054  BA 000000B9 R		mov edx, OFFSET bust_msg
 00000059  E8 00000000 E		call WriteString
 0000005E  E8 00000000 E		call crlf
 00000063  E8 00000000 E		call ReadInt
 00000068  83 F8 01			cmp eax, 1
 0000006B  74 93			je GameLoop
 0000006D  83 F8 00			cmp eax, 0
 00000070  74 00			je ExitGame

 00000072			ExitGame:
					invoke ExitProcess, 0
 00000072  6A 00	   *	    push   +000000000h
 00000074  E8 00000000 E   *	    call   ExitProcess
 00000079			main ENDP

 00000079			CheckBust PROC
 00000079  A0 00000084 R		mov al, player_facedown
 0000007E  BE 00000000			mov esi, 0
 00000083  B9 0000000A			mov ecx, LENGTHOF player_hand
 00000088				SumLoop:
 00000088  02 86 0000007A R			add al, player_hand[esi]
 0000008E  46					inc esi
 0000008F  83 F8 15				cmp eax, 21
 00000092  77 08				ja Bust
 00000094  E2 F2				loop SumLoop
 00000096  B8 00000000				mov eax, 0
 0000009B  C3					ret
 0000009C				Bust:
 0000009C  B8 00000001				mov eax, 1
 000000A1  C3					ret
						

 000000A2  C3			ret
 000000A3			CheckBust ENDP

 000000A3			DealHands PROC

 000000A3  BA 00000000			mov edx, 0
 000000A8  BB 00000000			mov ebx, 0
 000000AD  E8 000000D4			call DealToHand ;Player Faceup
 000000B2  BA 00000000			mov edx, 0
 000000B7  BB 00000001			mov ebx, 1
 000000BC  E8 000000C5			call DealToHand ;Dealer Faceup

 000000C1  BA 00000001			mov edx, 1
 000000C6  BB 00000000			mov ebx, 0
 000000CB  E8 000000B6			call DealToHand ;Player Facedown
 000000D0  BA 00000001			mov edx, 1
 000000D5  BB 00000001			mov ebx, 1
 000000DA  E8 000000A7			call DealToHand ;Dealer Facedown

 000000DF  C3			ret
 000000E0			DealHands ENDP

 000000E0			deckgen PROC
 000000E0  BE 00000000			mov esi, 0
 000000E5  B3 01			mov bl, 1
 000000E7  B9 0000000C			mov ecx, 12
					;movzx esi, BYTE PTR [deck]

 000000EC				ADD_TYPES:
 000000EC  E8 00000004				call addtype
 000000F1  FE C3				inc bl
 000000F3  E2 F7				loop ADD_TYPES
 000000F5			deckgen ENDP


 000000F5			addtype PROC USES ecx
 000000F5  51		   *	    push   ecx
 000000F6  B9 00000004			mov ecx, 4
 000000FB				ADD_ELEMENT:
 000000FB  88 1C 35				mov deck[esi * BYTE], bl
	   00000000 R
 00000102  46					inc esi
 00000103  E2 F6				loop ADD_ELEMENT
					ret
 00000105  59		   *	    pop    ecx
 00000106  C3		   *	    ret    00000h
 00000107			addtype ENDP

 00000107			shuffle PROC USES esi 
 00000107  56		   *	    push   esi
 00000108  B9 00000034			mov ecx, 52
 0000010D  0F B6 35			movzx esi, BYTE PTR [shuffled_deck]
	   00000034 R
 00000114  E8 00000000 E		call Randomize
 00000119				SHUFFLEL:
 00000119  0F B6 05				movzx eax, shuffle_range_size
	   00000068 R
 00000120  40					inc eax
 00000121  E8 00000000 E			call RandomRange
 00000126  8A 1C 05				mov bl, deck[eax * BYTE]
	   00000000 R
 0000012D  88 1C 35				mov shuffled_deck[esi * BYTE], bl
	   00000034 R
 00000134  46					inc esi
 00000135  FE 0D 00000068 R			dec shuffle_range_size
 0000013B  E8 00000004				call shiftleft
 00000140  E2 D7				loop SHUFFLEL

					ret
 00000142  5E		   *	    pop    esi
 00000143  C3		   *	    ret    00000h
 00000144			shuffle ENDP

 00000144			shiftleft PROC USES eax ecx edx
 00000144  50		   *	    push   eax
 00000145  51		   *	    push   ecx
 00000146  52		   *	    push   edx
 00000147  A3 00000069 R		mov shift_index, eax
 0000014C  B8 00000034			mov eax, LENGTHOF deck
 00000151  2B 05 00000069 R		sub eax, shift_index
 00000157  48				dec eax
 00000158  48				dec eax
 00000159  8B C8			mov ecx, eax
 0000015B				SHIFTL:
 0000015B  A1 00000069 R			mov eax, shift_index
 00000160  40					inc eax
 00000161  8A 1C 05				mov bl, deck[eax * BYTE] 
	   00000000 R
 00000168  8B 15 00000069 R			mov edx, shift_index
 0000016E  88 1C 15				mov deck[edx * BYTE], bl
	   00000000 R
 00000175  A1 00000069 R			mov eax, shift_index
 0000017A  40					inc eax
 0000017B  A3 00000069 R			mov shift_index, eax
 00000180  E2 D9				loop SHIFTL

					ret
 00000182  5A		   *	    pop    edx
 00000183  59		   *	    pop    ecx
 00000184  58		   *	    pop    eax
 00000185  C3		   *	    ret    00000h
 00000186			shiftleft ENDP

 00000186			DealToHand PROC ;edx bool var to indicate face up or face down if true, ecx true if dealing to dealer
 00000186  0F B6 35			movzx esi, shuffled_idx
	   0000006D R
 0000018D  83 FA 01			cmp edx, 1
 00000190  74 05			je FACEDOWN
 00000192  83 FA 00			cmp edx, 0
 00000195  74 30			je FACEUP


 00000197				FACEDOWN:
 00000197  83 FB 01				cmp ebx, 1
 0000019A  74 05				je DEALER_DOWN
 0000019C  83 FB 00				cmp ebx, 0
 0000019F  74 13				je PLAYER_DOWN

 000001A1					DEALER_DOWN:
 000001A1  8A 8E 00000034 R				mov cl, shuffled_deck[esi]
 000001A7  88 0D 00000078 R				mov dealer_facedown, cl
 000001AD  FE 05 0000006D R				inc shuffled_idx
 000001B3  C3						ret
 000001B4					PLAYER_DOWN:
 000001B4  8A 8E 00000034 R				mov cl, shuffled_deck[esi]
 000001BA  88 0D 00000084 R				mov player_facedown, cl
 000001C0  FE 05 0000006D R				inc shuffled_idx
 000001C6  C3						ret

 000001C7				FACEUP:
 000001C7  83 FB 01				cmp ebx, 1
 000001CA  74 05				je DEALER_UP
 000001CC  83 FB 00				cmp ebx, 0
 000001CF  74 20				je PLAYER_UP

 000001D1					DEALER_UP:
 000001D1  0F B6 05					movzx eax, dealer_idx
	   00000079 R
 000001D8  8A 8E 00000034 R				mov cl, shuffled_deck[esi]
 000001DE  88 88 0000006E R				mov dealer_hand[eax], cl
 000001E4  FE 05 0000006D R				inc shuffled_idx
 000001EA  FE 05 00000079 R				inc dealer_idx
 000001F0  C3						ret
 000001F1					PLAYER_UP:
 000001F1  0F B6 05					movzx eax, player_idx
	   00000085 R
 000001F8  8A 8E 00000034 R				mov cl, shuffled_deck[esi]
 000001FE  88 88 0000007A R				mov player_hand[eax], cl
 00000204  FE 05 0000006D R				inc shuffled_idx
 0000020A  FE 05 00000085 R				inc player_idx
 00000210  C3						ret

 00000211			DealToHand ENDP

 00000211			DisplayCards PROC

 00000211  BA 00000086 R		mov edx,OFFSET face_up_string
 00000216  E8 00000000 E		call WriteString
 0000021B  BE 00000000			mov esi,0
 00000220  B9 0000000A			mov ecx, LENGTHOF player_hand
 00000225				PlayerHand:
 00000225  8A 86 0000007A R			mov al, player_hand[esi]
 0000022B  E8 00000000 E			call WriteInt
 00000230  46					inc esi
 00000231  E2 F2				loop PlayerHand

 00000233  E8 00000000 E		call crlf
 00000238  BA 00000090 R		mov edx, OFFSET face_down_string
 0000023D  E8 00000000 E		call WriteString
 00000242  A0 00000084 R		mov al, player_facedown
 00000247  E8 00000000 E		call WriteInt
 0000024C  E8 00000000 E		call crlf

 00000251  BA 0000009C R		mov edx, OFFSET dealer_faceup_string
 00000256  E8 00000000 E		call WriteString
 0000025B  A0 0000006E R		mov al, dealer_hand[0]
 00000260  E8 00000000 E		call WriteInt
 00000265  E8 00000000 E		call crlf

 0000026A  C3				ret
 0000026B			DisplayCards ENDP

 0000026B			HitOrStay PROC

 0000026B  BA 000000A5 R		mov edx,OFFSET hit_or_stay
 00000270  E8 00000000 E		call WriteString
 00000275  E8 00000000 E		call ReadInt
 0000027A  83 F8 01			cmp eax,1
 0000027D  74 01			je HIT
 0000027F  C3				ret

 00000280				HIT:
 00000280  BA 00000000				mov edx,0
 00000285  BB 00000000				mov ebx,0
 0000028A  E8 FFFFFEF7				call DealToHand
 0000028F  C3					ret

 00000290			HitOrStay ENDP

				END main
Microsoft (R) Macro Assembler Version 14.00.24210.0	    12/12/16 11:30:47
	BLACKJAC					     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000000E7 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000290 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CheckBust  . . . . . . . . . . .	P Near	 00000079 _TEXT	Length= 0000002A Public STDCALL
  SumLoop  . . . . . . . . . . .	L Near	 00000088 _TEXT	
  Bust . . . . . . . . . . . . .	L Near	 0000009C _TEXT	
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DealHands  . . . . . . . . . . .	P Near	 000000A3 _TEXT	Length= 0000003D Public STDCALL
DealToHand . . . . . . . . . . .	P Near	 00000186 _TEXT	Length= 0000008B Public STDCALL
  FACEDOWN . . . . . . . . . . .	L Near	 00000197 _TEXT	
  DEALER_DOWN  . . . . . . . . .	L Near	 000001A1 _TEXT	
  PLAYER_DOWN  . . . . . . . . .	L Near	 000001B4 _TEXT	
  FACEUP . . . . . . . . . . . .	L Near	 000001C7 _TEXT	
  DEALER_UP  . . . . . . . . . .	L Near	 000001D1 _TEXT	
  PLAYER_UP  . . . . . . . . . .	L Near	 000001F1 _TEXT	
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DisplayCards . . . . . . . . . .	P Near	 00000211 _TEXT	Length= 0000005A Public STDCALL
  PlayerHand . . . . . . . . . .	L Near	 00000225 _TEXT	
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HitOrStay  . . . . . . . . . . .	P Near	 0000026B _TEXT	Length= 00000025 Public STDCALL
  HIT  . . . . . . . . . . . . .	L Near	 00000280 _TEXT	
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
addtype  . . . . . . . . . . . .	P Near	 000000F5 _TEXT	Length= 00000012 Public STDCALL
  ADD_ELEMENT  . . . . . . . . .	L Near	 000000FB _TEXT	
deckgen  . . . . . . . . . . . .	P Near	 000000E0 _TEXT	Length= 00000015 Public STDCALL
  ADD_TYPES  . . . . . . . . . .	L Near	 000000EC _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000079 Public STDCALL
  GameLoop . . . . . . . . . . .	L Near	 00000000 _TEXT	
  MainLoop . . . . . . . . . . .	L Near	 00000027 _TEXT	
  Bust . . . . . . . . . . . . .	L Near	 0000004A _TEXT	
  ExitGame . . . . . . . . . . .	L Near	 00000072 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
shiftleft  . . . . . . . . . . .	P Near	 00000144 _TEXT	Length= 00000042 Public STDCALL
  SHIFTL . . . . . . . . . . . .	L Near	 0000015B _TEXT	
shuffle  . . . . . . . . . . . .	P Near	 00000107 _TEXT	Length= 0000003D Public STDCALL
  SHUFFLEL . . . . . . . . . . .	L Near	 00000119 _TEXT	
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
bust_msg . . . . . . . . . . . .	Byte	 000000B9 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
dealer_facedown  . . . . . . . .	Byte	 00000078 _DATA	
dealer_faceup_string . . . . . .	Byte	 0000009C _DATA	
dealer_hand  . . . . . . . . . .	Byte	 0000006E _DATA	
dealer_idx . . . . . . . . . . .	Byte	 00000079 _DATA	
deck . . . . . . . . . . . . . .	Byte	 00000000 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
face_down_string . . . . . . . .	Byte	 00000090 _DATA	
face_up_string . . . . . . . . .	Byte	 00000086 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
hit_or_stay  . . . . . . . . . .	Byte	 000000A5 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
player_facedown  . . . . . . . .	Byte	 00000084 _DATA	
player_hand  . . . . . . . . . .	Byte	 0000007A _DATA	
player_idx . . . . . . . . . . .	Byte	 00000085 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
shift_index  . . . . . . . . . .	DWord	 00000069 _DATA	
shuffle_range_size . . . . . . .	Byte	 00000068 _DATA	
shuffled_deck  . . . . . . . . .	Byte	 00000034 _DATA	
shuffled_idx . . . . . . . . . .	Byte	 0000006D _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
